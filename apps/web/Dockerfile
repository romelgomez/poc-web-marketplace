# :: test steps ::
#
# 1. npx nx build api  --configuration=production
#
# 2. docker-compose down -v
#
# 3. docker build --progress=plain --no-cache -t maryline/web:0.0.1 -f apps/web/Dockerfile .
#
# 3. docker-compose up --build
#

FROM node:20-alpine AS base

ARG TAG_ID

RUN echo $TAG_ID

ARG CLERK_SECRET_KEY
ARG CLOUDINARY_API_KEY
ARG CLOUDINARY_SECRET
ARG WEBHOOK_SECRET
ARG NEXT_PUBLIC_GRAPHQL
ARG NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME
ARG NEXT_PUBLIC_UPLOAD_PRESET
ARG NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY

ENV CLERK_SECRET_KEY=$CLERK_SECRET_KEY
ENV CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY
ENV CLOUDINARY_SECRET=$CLOUDINARY_SECRET
ENV WEBHOOK_SECRET=$WEBHOOK_SECRET
ENV NEXT_PUBLIC_GRAPHQL=$NEXT_PUBLIC_GRAPHQL
ENV NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=$NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME
ENV NEXT_PUBLIC_UPLOAD_PRESET=$NEXT_PUBLIC_UPLOAD_PRESET
ENV NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
ENV TAG_ID=$TAG_ID

WORKDIR /app

COPY package*.json ./

RUN npm i

COPY apps/web .

EXPOSE 3000

ENV PORT 3000

ENV NEXT_TELEMETRY_DISABLED=1

CMD ["npx", "next", "start"]
