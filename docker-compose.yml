# Removing the volumes to reset the PostgreSQL database state: 
# - docker-compose down -v 
# - docker-compose up --build

# Check Network Connectivity, Access the api service container and 
# test connectivity to the PostgreSQL service:
# - nc -zv postgres 5432

# To check if the database tables are created, you can access the PostgreSQL database inside the Docker container and use psql (the PostgreSQL command-line tool) to inspect the database.
# Here's how to do it:
# Access the PostgreSQL Container:
# docker-compose exec postgres sh
# psql -U developer -d chevere
# \dt
# 

services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: developer
      POSTGRES_DB: chevere
      POSTGRES_PASSWORD: developer
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - '3001:3001'
    environment:
      NODE_ENV: development
      PORT: 3001
      GOOGLE_CALLBACK_URL: http://localhost:3001/api/auth/google/redirect
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: developer
      DATABASE_NAME: chevere
      CLERK_ISSUER_URL: https://hardy-weasel-66.clerk.accounts.dev
      MEILI_HOST: http://meilisearch:7700
      DATABASE_PASSWORD: developer
      DATABASE_URL: postgres://developer:developer@postgres:5432/chevere?schema=public
    depends_on:
      - postgres
    secrets:
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - DATABASE_PASSWORD
      - JWT_SECRET
      - JWT_EXPIRATION_TIME
      - AT_SECRET
      - RT_SECRET
      - MEILI_KEY

volumes:
  postgres_data:

secrets:
  GOOGLE_CLIENT_ID:
    file: ./secrets/GOOGLE_CLIENT_ID
  GOOGLE_CLIENT_SECRET:
    file: ./secrets/GOOGLE_CLIENT_SECRET
  DATABASE_PASSWORD:
    file: ./secrets/DATABASE_PASSWORD
  JWT_SECRET:
    file: ./secrets/JWT_SECRET
  JWT_EXPIRATION_TIME:
    file: ./secrets/JWT_EXPIRATION_TIME
  AT_SECRET:
    file: ./secrets/AT_SECRET
  RT_SECRET:
    file: ./secrets/RT_SECRET
  MEILI_KEY:
    file: ./secrets/MEILI_KEY





# services:
#   postgres:
#     image: postgres:13-alpine
#     environment:
#       POSTGRES_USER: developer
#       POSTGRES_DB: chevere
#       # POSTGRES_PASSWORD: /run/secrets/DATABASE_PASSWORD
#       POSTGRES_PASSWORD: developer
#     ports:
#       - '5432:5432'
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     # secrets:
#     #   - DATABASE_PASSWORD

#   api:
#     build:
#       context: .
#       dockerfile: apps/api/Dockerfile
#     ports:
#       - '3001:3001'
#     environment:
#       NODE_ENV: development
#       PORT: 3001
#       GOOGLE_CALLBACK_URL: http://localhost:3001/api/auth/google/redirect
#       DATABASE_HOST: postgres
#       DATABASE_PORT: 5432
#       DATABASE_USER: developer
#       DATABASE_NAME: chevere
#       CLERK_ISSUER_URL: https://hardy-weasel-66.clerk.accounts.dev
#       MEILI_HOST: http://meilisearch:7700
#       DATABASE_PASSWORD: developer
#       # DATABASE_URL: postgres://developer:$(< /run/secrets/DATABASE_PASSWORD)@5432/chevere?schema=public
#       DATABASE_URL: postgres://developer:developer@5432:5432/chevere?schema=public
#     depends_on:
#       # - api
#       # - meilisearch
#       - postgres
      

#     secrets:
#       - GOOGLE_CLIENT_ID
#       - GOOGLE_CLIENT_SECRET
#       - DATABASE_PASSWORD
#       - JWT_SECRET
#       - JWT_EXPIRATION_TIME
#       - AT_SECRET
#       - RT_SECRET
#       - MEILI_KEY

#   # web:
#   #   build:
#   #     context: .
#   #     dockerfile: apps/web/Dockerfile
#   #   ports:
#   #     - '3000:3000'
#   #   environment:
#   #     - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
#   #   depends_on:
#   #     - api
#   #     - meilisearch
#   #     - postgres
#   #   secrets:
#   #     - CLERK_SECRET_KEY


#   # meilisearch:
#   #   image: getmeili/meilisearch:v0.28.1
#   #   ports:
#   #     - '7700:7700'
#   #   volumes:
#   #     - meili_data:/meili_data


# volumes:
#   # meili_data:
#   postgres_data:


# secrets:
#   GOOGLE_CLIENT_ID:
#     file: ./secrets/GOOGLE_CLIENT_ID
#   GOOGLE_CLIENT_SECRET:
#     file: ./secrets/GOOGLE_CLIENT_SECRET
#   DATABASE_PASSWORD:
#     file: ./secrets/DATABASE_PASSWORD
#   JWT_SECRET:
#     file: ./secrets/JWT_SECRET
#   JWT_EXPIRATION_TIME:
#     file: ./secrets/JWT_EXPIRATION_TIME
#   AT_SECRET:
#     file: ./secrets/AT_SECRET
#   RT_SECRET:
#     file: ./secrets/RT_SECRET
#   MEILI_KEY:
#     file: ./secrets/MEILI_KEY
